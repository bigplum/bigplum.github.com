--- 
layout: post
title: !binary |
  UzPkupHlrZjlgqjnoJTnqbbvvIjkuozvvIkt5L2/55So5rWP6KeI5Zmo6KGo
  5Y2V5LiK5Lyg5paH5Lu25YiwUzM=

excerpt: "<strong>1. \xE8\xA1\xA8\xE5\x8D\x95\xE5\x86\x85\xE5\xAE\xB9</strong>\r\n\
  <pre style=\"font-size: 12px; font-family: 'Courier New', Courier, mono; background-color: #eff7ff; overflow-x: auto; overflow-y: auto; width: 600px; padding-top: 15px; padding-right: 10px; padding-bottom: 15px; padding-left: 10px; margin: 0px; border: 1px dashed #333333;\"><code style=\"font-family: 'Courier New', Courier, mono; font-size: 12px;\">    <form action=\"https://s3-bucket.s3.amazonaws.com/\" method=\"post\" enctype=\"multipart/form-data\">\r\n      <input type=\"hidden\" name=\"key\" value=\"uploads/${filename}\">\r\n      <input type=\"hidden\" name=\"AWSAccessKeyId\" value=\"YOUR_AWS_ACCESS_KEY\">\r\n      <input type=\"hidden\" name=\"acl\" value=\"private\">\r\n      <input type=\"hidden\" name=\"success_action_redirect\" value=\"http://localhost/\">\r\n      <input type=\"hidden\" name=\"policy\" value=\"YOUR_POLICY_DOCUMENT_BASE64_ENCODED\">\r\n      <input type=\"hidden\" name=\"signature\" value=\"YOUR_CALCULATED_SIGNATURE\">\r\n      <input type=\"hidden\" name=\"Content-Type\" value=\"image/jpeg\">\r\n\
  \r\n      File to upload to S3:\r\n      <input name=\"file\" type=\"file\">\r\n      <br>\r\n      <input type=\"submit\" value=\"Upload File to S3\">\r\n    </form> </code></pre>\r\n\
  \xE4\xB8\x8A\xE4\xBC\xA0\xE5\x9C\xB0\xE5\x9D\x80\xE7\x9A\x84s3-bucket.s3.amazonaws.com\xE4\xB8\xADs3-bucket\xE4\xB8\xBA\xE4\xBD\xBF\xE7\x94\xA8\xE8\x80\x85\xE6\x89\x80\xE6\x8B\xA5\xE6\x9C\x89\xE7\x9A\x84bucket\xE3\x80\x82\xE4\xB8\x8A\xE8\xBF\xB0\xE8\xA1\xA8\xE5\x8D\x95\xE4\xBD\xBF\xE7\x94\xA8\xE4\xBA\x86\xE4\xB8\x80\xE4\xBA\x9B\xE5\xB8\xB8\xE7\x94\xA8\xE7\x9A\x84\xE5\xAD\x97\xE6\xAE\xB5\xEF\xBC\x9A\r\n\
  1. key  \xE4\xB8\x8A\xE4\xBC\xA0\xE7\x9A\x84\xE6\x96\x87\xE4\xBB\xB6\xE5\x90\x8D\xEF\xBC\x9B\r\n\
  2. AWSAccessKeyId   \xE4\xBB\x8EAmazon\xE8\x8E\xB7\xE5\xBE\x97\xE7\x9A\x84access key\xEF\xBC\x9B\r\n\
  3. acl  \xE8\xAE\xBF\xE9\x97\xAE\xE6\x8E\xA7\xE5\x88\xB6\xEF\xBC\x8C\xE5\x8F\xAF\xE4\xBB\xA5\xE8\xAE\xBE\xE7\xBD\xAE\xE4\xB8\xBA\xEF\xBC\x9Aprivate(\xE7\xA7\x81\xE6\x9C\x89)\xE3\x80\x81public-read\xEF\xBC\x88\xE5\x85\xAC\xE5\xBC\x80\xEF\xBC\x89\xEF\xBC\x9B\r\n\
  4. success_action_redirect  \xE4\xB8\x8A\xE4\xBC\xA0\xE6\x88\x90\xE5\x8A\x9F\xE5\x90\x8E\xE6\xB5\x8F\xE8\xA7\x88\xE5\x99\xA8\xE8\xA2\xAB\xE9\x87\x8D\xE5\xAE\x9A\xE5\x90\x91\xE5\x88\xB0\xE8\xBF\x99\xE4\xB8\xAA\xE5\x9C\xB0\xE5\x9D\x80\xEF\xBC\x8C\xE5\xB9\xB6\xE4\xB8\x94\xE9\x99\x84\xE5\xB8\xA6\xE4\xB8\x8Abucke/key/etag\xE4\xB8\x89\xE4\xB8\xAA\xE5\x8F\x82\xE6\x95\xB0\xE5\x92\x8C\xE6\x96\x87\xE4\xBB\xB6\xE7\x9A\x84hash\xE5\x80\xBC\xEF\xBC\x9B\r\n\
  5. policy \xE8\xA1\xA8\xE5\x8D\x95\xE9\x89\xB4\xE6\x9D\x83\xE7\xAD\x96\xE7\x95\xA5\xEF\xBC\x8Cbase64\xE7\xBC\x96\xE7\xA0\x81\xE7\x9A\x84\xE6\xA0\xBC\xE5\xBC\x8F\xE5\xAD\x97\xE7\xAC\xA6\xE4\xB8\xB2\xEF\xBC\x9B\xE4\xB8\x8B\xE9\x9D\xA2\xE5\x8D\x95\xE7\x8B\xAC\xE4\xBB\x8B\xE7\xBB\x8D\xEF\xBC\x9B\r\n\
  6. signature  policy\xE5\x92\x8CAWS Secret Key\xE7\x9A\x84\xE7\xAD\xBE\xE5\x90\x8D\xE7\xBB\x93\xE6\x9E\x9C\xEF\xBC\x8C\xE7\x94\xA8\xE4\xBA\x8E\xE4\xBF\x9D\xE8\xAF\x81\xE4\xB8\x8A\xE4\xBC\xA0\xE6\x98\xAF\xE5\x90\x88\xE6\xB3\x95\xE7\x9A\x84\xEF\xBC\x9B\r\n\
  7. content-type \xE6\x96\x87\xE4\xBB\xB6mime\xE7\xB1\xBB\xE5\x9E\x8B\xEF\xBC\x8C\xE9\xBB\x98\xE8\xAE\xA4\xE4\xB8\xBA application/octet-stream , \xE5\xBA\x94\xE5\xA1\xAB\xE5\x86\x99\xE8\xAF\xA5\xE5\x80\xBC\xE4\xBE\xBF\xE4\xBA\x8E\xE6\xB5\x8F\xE8\xA7\x88\xE5\x99\xA8\xE8\xAF\x86\xE5\x88\xAB\xE6\x96\x87\xE4\xBB\xB6\xE7\xB1\xBB\xE5\x9E\x8B\xEF\xBC\x9B\r\n\
  8. file \xE4\xB8\x8A\xE4\xBC\xA0\xE7\x9A\x84\xE6\x96\x87\xE4\xBB\xB6\xE3\x80\x82"
date: 2009-08-19 08:21:02 +08:00
---
本文涉及到的所有内容都是以utf-8编码的。
<strong>1. 表单内容</strong>
<pre style="font-size: 12px; font-family: 'Courier New', Courier, mono; background-color: #eff7ff; overflow-x: auto; overflow-y: auto; padding-top: 15px; padding-right: 10px; padding-bottom: 15px; padding-left: 10px; margin: 0px; border: 1px dashed #333333;"><code style="font-family: 'Courier New', Courier, mono; font-size: 12px;">    <form action="https://s3-bucket.s3.amazonaws.com/" method="post" enctype="multipart/form-data">
      <input type="hidden" name="key" value="uploads/${filename}">
      <input type="hidden" name="AWSAccessKeyId" value="YOUR_AWS_ACCESS_KEY">
      <input type="hidden" name="acl" value="private">
      <input type="hidden" name="success_action_redirect" value="http://localhost/">
      <input type="hidden" name="policy" value="YOUR_POLICY_DOCUMENT_BASE64_ENCODED">
      <input type="hidden" name="signature" value="YOUR_CALCULATED_SIGNATURE">
      <input type="hidden" name="Content-Type" value="image/jpeg">

      File to upload to S3:
      <input name="file" type="file">
      <br>
      <input type="submit" value="Upload File to S3">
    </form> </code></pre>
上传地址的s3-bucket.s3.amazonaws.com中s3-bucket为使用者所拥有的bucket。上述表单使用了一些常用的字段：
1. key  上传的文件名；
2. AWSAccessKeyId   从Amazon获得的access key；
3. acl  访问控制，可以设置为：private(私有), public-read（公开）, public-read-write, authenticated-read.
4. success_action_redirect  上传成功后浏览器被重定向到这个地址，并且附带上bucke/key/etag三个参数和文件的hash值；
5. policy 表单鉴权策略，base64编码的格式字符串；下面单独介绍；
6. signature  policy和AWS Secret Key的签名结果，用于保证上传是合法的；
7. content-type 文件mime类型，默认为 application/octet-stream , 应填写该值便于浏览器识别文件类型；
8. file 上传的文件。
<!--more-->
policy
policy用于保证该表单是由合法的S3用户所创建的；policy为JSON格式的字符串：
<pre style="font-size: 12px; font-family: 'Courier New', Courier, mono; background-color: #eff7ff; overflow-x: auto; overflow-y: auto; padding-top: 15px; padding-right: 10px; padding-bottom: 15px; padding-left: 10px; margin: 0px; border: 1px dashed #333333;"><code style="font-family: 'Courier New', Courier, mono; font-size: 12px;">{"expiration": "2009-01-01T00:00:00Z",
  "conditions": [
    {"bucket": "s3-bucket"},
    ["starts-with", "$key", "uploads/"],
    {"acl": "private"},
    {"success_action_redirect": "http://localhost/"},
    ["starts-with", "$Content-Type", ""],
    ["content-length-range", 0, 1048576]
  ]
}</code></pre>
expiration： 表示policy的有效时间；
conditions： policy规则，应包含表单中所有的字段，所以这里列出了acl, success_action_redirect, 和 Content-Type；同时policy包含了content-length-range，用于限制上传的文件大小；

policy有3中类型的规则：
1. Equality： 表单中的字段值设置为相应的字符串，例如：{"acl": "private"}
2. Starts-With：检查表单字段值是否以给定的字符串开始，为一个三元组，例如：["starts-with", "$key", "uploads/"],　$key为表单字段名，表单字段的值必须是“upload/”开头的；
3. Content length：三元组，表示文件长度的最小、最大值。

<strong>2. 签名</strong>
1. 首先将policy用base64编码，将其放到表单的policy字段中；
2. 用AWS secret key作为密码将policy签名，算法为SHA-1 HMAC; 签名后的结果再用base64编码；
示例代码：
<h3 id="ruby" style="color: #146eb4; font-size: 12px; font-weight: bold; padding: 0px;">Ruby</h3>
<pre style="font-size: 12px; font-family: 'Courier New', Courier, mono; background-color: #eff7ff; overflow-x: auto; overflow-y: auto;padding-top: 15px; padding-right: 10px; padding-bottom: 15px; padding-left: 10px; margin: 0px; border: 1px dashed #333333;"><code style="font-family: 'Courier New', Courier, mono; font-size: 12px;">require 'base64'
require 'openssl'
require 'digest/sha1'

policy = Base64.encode64(policy_document).gsub("\n","")

signature = Base64.encode64(
    OpenSSL::HMAC.digest(
        OpenSSL::Digest::Digest.new('sha1'), 
        aws_secret_key, policy)
    ).gsub("\n","")
</code></pre>
<h3 id="java" style="color: #146eb4; font-size: 12px; font-weight: bold; padding: 0px;">Java</h3>
<pre style="font-size: 12px; font-family: 'Courier New', Courier, mono; background-color: #eff7ff; overflow-x: auto; overflow-y: auto;padding-top: 15px; padding-right: 10px; padding-bottom: 15px; padding-left: 10px; margin: 0px; border: 1px dashed #333333;"><code style="font-family: 'Courier New', Courier, mono; font-size: 12px;">import sun.misc.BASE64Encoder;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

String policy = (new BASE64Encoder()).encode(
    policy_document.getBytes("UTF-8")).replaceAll("\n","").replaceAll("\r","");

Mac hmac = Mac.getInstance("HmacSHA1");
hmac.init(new SecretKeySpec(
    aws_secret_key.getBytes("UTF-8"), "HmacSHA1"));
String signature = (new BASE64Encoder()).encode(
    hmac.doFinal(policy.getBytes("UTF-8")))
    .replaceAll("\n", "");
</code></pre>
<h3 id="python" style="color: #146eb4; font-size: 12px; font-weight: bold; padding: 0px;">Python</h3>
<pre style="font-size: 12px; font-family: 'Courier New', Courier, mono; background-color: #eff7ff; overflow-x: auto; overflow-y: auto;padding-top: 15px; padding-right: 10px; padding-bottom: 15px; padding-left: 10px; margin: 0px; border: 1px dashed #333333;"><code style="font-family: 'Courier New', Courier, mono; font-size: 12px;">import base64
import hmac, sha

policy = base64.b64encode(policy_document)

signature = base64.b64encode(
    hmac.new(aws_secret_key, policy, sha).digest())</code></pre>

本文为翻译缩略版，原文出处：<a href="http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1434&categoryID=55">http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1434&categoryID=55</a>
更多详细内容，请参考手册：<a href="http://docs.amazonwebservices.com/AmazonS3/2006-03-01/index.html?UsingHTTPPOST.html">http://docs.amazonwebservices.com/AmazonS3/2006-03-01/index.html?UsingHTTPPOST.html</a>
